# -*- coding: utf-8 -*-
"""calorietraker_cleaning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XcNazH6Z-LCO505iT6jocvZ8BNBWLt4F
"""

#Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as stats
from scipy.stats import shapiro, kstest, anderson, skew, kurtosis
import warnings
import scipy.stats as stats
from statsmodels.imputation import mice
import missingno as msno
warnings.filterwarnings('ignore')

#Upload the File
from google.colab import files

#File's path
file_path = '/content/CalorieTracker.xlsx'

#Read Excel file
data = pd.read_excel(file_path, engine= 'openpyxl')

#Display the DataFrame
data.head()

data.info()

# Replace commas with periods for decimal separators
data['Date'] = pd.to_datetime(data['Date'])
data['Tot. Fat (g)'] = data['Tot. Fat (g)'].str.replace(',', '.', regex=True).astype(float)
data['Tot. Sat. Fat (g)'] = data['Tot. Sat. Fat (g)'].str.replace(',', '.', regex=True).astype(float)
data['Tot. Carbs. (g)'] = data['Tot. Carbs. (g)'].str.replace(',', '.', regex=True).astype(float)
data['Tot. Fibre (g)'] = data['Tot. Fibre (g)'].str.replace(',', '.', regex=True).astype(float)
data['Tot. Sugar (g)'] = data['Tot. Sugar (g)'].str.replace(',', '.', regex=True).astype(float)
data['Tot. Prot. (g)'] = data['Tot. Prot. (g)'].str.replace(',', '.', regex=True).astype(float)
data['Tot. Sod. (mg)'] = data['Tot. Sod. (mg)'].str.replace(',', '.', regex=True).astype(float)
data['Tot. Chol. (g)'] = data['Tot. Chol. (g)'].str.replace(',', '.', regex=True).astype(float)
data['Tot. Potassium (mg)'] = data['Tot. Potassium (mg)'].str.replace(',', '.', regex=True).astype(float)

data.head()

# Identify missing values
missing_values = data.isnull().sum()
percentage_missing = (missing_values / len(data)) * 100

# Combine into a single DataFrame
missing_data_table = pd.DataFrame({
    'Missing Values': missing_values,
    'Percentage Missing': percentage_missing
})

# Display the result
print(missing_data_table)

#Handling missing values
missing_values = data.isnull().sum()
non_missing_values = data.notnull().sum()

# Create a DataFrame to hold both missing and non-missing values
comparison_table = pd.DataFrame({
    'Non-Missing Values': non_missing_values,
    'Missing Values': missing_values
})

# Plotting
comparison_table.plot(kind='bar', figsize=(14, 8))
plt.title('Comparison of Missing and Non-Missing Values for Each Column')
plt.xlabel('Columns')
plt.ylabel('Count')
plt.xticks(rotation=45, ha='right')
plt.legend(loc='upper right')
plt.show()

columns = [
    'Breakfast', 'Lunch', 'Dinner', 'Snacks/Other', 'Tot. Cals. (Kcal)',
    'Tot. Fat (g)', 'Tot. Sat. Fat (g)', 'Tot. Carbs. (g)', 'Tot. Fibre (g)',
    'Tot. Sugar (g)', 'Tot. Prot. (g)', 'Tot. Sod. (mg)', 'Tot. Chol. (g)',
    'Tot. Potassium (mg)'
]

# Set the aesthetic style of the plots
sns.set(style="whitegrid")

# Create a separate histogram for each column
for column in columns:
    plt.figure(figsize=(10, 6))
    sns.histplot(data[column], kde=True, bins=30, color='blue')  # kde=True adds the Kernel Density Estimate curve
    plt.title(f'Distribution of {column}')
    plt.xlabel(column)
    plt.ylabel('Frequency')
    plt.show()

data = data.drop('Date', axis=1)
# Function to calculate important statistics for each column
def calculate_statistics(data):
    stats_df = pd.DataFrame({
        'Mean': data.mean(),
        'Median': data.median(),
        'Standard Deviation': data.std(),
        'Variance': data.var(),
        'Min': data.min(),
        'Max': data.max(),
        '25th Percentile': data.quantile(0.25),
        '50th Percentile (Median)': data.quantile(0.50),
        '75th Percentile': data.quantile(0.75),
        'Count (non-null)': data.count(),
        'Missing Values': data.isnull().sum()
    })
    return stats_df

# Calculate statistics
statistics = calculate_statistics(data)

# Display the statistics
print(statistics)

breakfast_data = data[data['Breakfast'].isnull()]
print(breakfast_data)

data.loc[(data['Tot. Cals. (Kcal)'] < 1500) & (data['Breakfast'].isnull()), 'Breakfast'] = data['Breakfast'].mean()
data.loc[(data['Tot. Cals. (Kcal)'] > 1500) & (data['Breakfast'].isnull()), 'Breakfast'] = 0

breakfast_data = data[data['Breakfast'].isnull()]
print(breakfast_data)

lunch_data = data[data['Lunch'].isnull()]
print(lunch_data)

data.loc[(data['Tot. Cals. (Kcal)'] < 1500) & (data['Lunch'].isnull()), 'Lunch'] = data['Lunch'].mean()
data.loc[(data['Tot. Cals. (Kcal)'] > 1500) & (data['Lunch'].isnull()), 'Lunch'] = 0

lunch_data = data[data['Lunch'].isnull()]
print(lunch_data)

dinner_data = data[data['Dinner'].isnull()]
print(dinner_data)

data.loc[(data['Tot. Cals. (Kcal)'] < 1500) & (data['Dinner'].isnull()), 'Dinner'] = data['Dinner'].mean()
data.loc[(data['Tot. Cals. (Kcal)'] > 1500) & (data['Dinner'].isnull()), 'Dinner'] = 0

dinner_data = data[data['Dinner'].isnull()]
print(dinner_data)

snacks_data = data[data['Snacks/Other'].isnull()]
print(snacks_data)

data.loc[(data['Tot. Cals. (Kcal)'] < 1500) & (data['Snacks/Other'].isnull()), 'Snacks/Other'] = data['Snacks/Other'].mean()
data.loc[(data['Tot. Cals. (Kcal)'] > 1500) & (data['Snacks/Other'].isnull()), 'Snacks/Other'] = 0

snacks_data = data[data['Snacks/Other'].isnull()]
print(snacks_data)

# Identify missing values
missing_values = data.isnull().sum()
percentage_missing = (missing_values / len(data)) * 100

# Combine into a single DataFrame
missing_data_table = pd.DataFrame({
    'Missing Values': missing_values,
    'Percentage Missing': percentage_missing
})

# Display the result
print(missing_data_table)

data['Breakfast'].fillna(data['Breakfast'].median(), inplace=True)
data['Lunch'].fillna(data['Lunch'].median(), inplace=True)
data['Dinner'].fillna(data['Dinner'].median(), inplace=True)
data['Snacks/Other'].fillna(data['Snacks/Other'].median(), inplace=True)
data['Tot. Cals. (Kcal)'].fillna(data['Tot. Cals. (Kcal)'].median(), inplace=True)
data['Tot. Fat (g)'].fillna(data['Tot. Fat (g)'].median(), inplace=True)

# Verify that there are no more missing values
print(data.isnull().sum())

# Calculate the new total calories as the sum of Breakfast, Lunch, Dinner, and Snacks/Other
data['Tot. Cals. (Kcal)'] = data['Breakfast'] + data['Lunch'] + data['Dinner'] + data['Snacks/Other']

# Selecting the specified columns
selected_columns = ['Breakfast', 'Lunch', 'Dinner', 'Snacks/Other', 'Tot. Cals. (Kcal)', 'Tot. Fat (g)']

# Creating a new DataFrame with only the selected columns
new_data = data[selected_columns]

# Alternatively, you can save it in other formats, e.g., Excel:
new_data.to_excel('cleaned_data.xlsx', index=False)

print("New dataset saved successfully!")