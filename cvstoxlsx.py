# -*- coding: utf-8 -*-
"""CVStoXLSX.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XpEpHIIvCDhk-0lO36Pq1IcgO2s9dM_A
"""

import os
import pandas as pd

def get_max_columns(file_path, delimiter):
    with open(file_path, 'r') as file:
        return max(file, key=lambda x: x.count(delimiter)).count(delimiter)

def convert_csv_to_excel_folder(input_folder, output_folder=None, delimiter=','):
    if output_folder is None:
        output_folder = input_folder

    # Create output folder if it doesn't exist
    os.makedirs(output_folder, exist_ok=True)

    # Iterate through all files in the input folder
    for filename in os.listdir(input_folder):
        if filename.endswith('.csv'):
            csv_file_path = os.path.join(input_folder, filename)
            excel_file_path = os.path.join(output_folder, filename.replace('.csv', '.xlsx'))

            try:
                # Calculate the maximum number of columns in the CSV file
                max_columns = get_max_columns(csv_file_path, delimiter)
                # Read the CSV file with the specified options
                df = pd.read_csv(csv_file_path, header=None, skiprows=1, names=list(range(0, max_columns)))
                # Write the DataFrame to an Excel file
                df.to_excel(excel_file_path, index=False)
                print(f"Successfully converted {filename}")
            except Exception as e:
                print(f"Error converting {filename}: {e}")

# Example usage
input_folder = '/content/data_cvs'  # Replace with the path to your input folder containing CSV files
output_folder = '/content/data_xlsx'  # Replace with the desired output folder path, or set to None to save in the same folder

# Convert all CSV files in the input folder to Excel files
convert_csv_to_excel_folder(input_folder, output_folder)

